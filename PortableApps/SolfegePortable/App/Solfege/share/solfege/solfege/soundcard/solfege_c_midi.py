# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_solfege_c_midi', [dirname(__file__)])
        except ImportError:
            import _solfege_c_midi
            return _solfege_c_midi
        if fp is not None:
            try:
                _mod = imp.load_module('_solfege_c_midi', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _solfege_c_midi = swig_import_helper()
    del swig_import_helper
else:
    import _solfege_c_midi
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


STDC_HEADERS = _solfege_c_midi.STDC_HEADERS
HAVE_FCNTL_H = _solfege_c_midi.HAVE_FCNTL_H
HAVE_SYS_IOCTL_H = _solfege_c_midi.HAVE_SYS_IOCTL_H
HAVE_UNISTD_H = _solfege_c_midi.HAVE_UNISTD_H

def seq_bender(*args):
  return _solfege_c_midi.seq_bender(*args)
seq_bender = _solfege_c_midi.seq_bender

def seq_start_note(*args):
  return _solfege_c_midi.seq_start_note(*args)
seq_start_note = _solfege_c_midi.seq_start_note

def seq_stop_note(*args):
  return _solfege_c_midi.seq_stop_note(*args)
seq_stop_note = _solfege_c_midi.seq_stop_note

def seq_set_patch(*args):
  return _solfege_c_midi.seq_set_patch(*args)
seq_set_patch = _solfege_c_midi.seq_set_patch

def seq_set_volume(*args):
  return _solfege_c_midi.seq_set_volume(*args)
seq_set_volume = _solfege_c_midi.seq_set_volume

def seq_delta_time(*args):
  return _solfege_c_midi.seq_delta_time(*args)
seq_delta_time = _solfege_c_midi.seq_delta_time

def seq_start_timer():
  return _solfege_c_midi.seq_start_timer()
seq_start_timer = _solfege_c_midi.seq_start_timer

def seqbuf_dump():
  return _solfege_c_midi.seqbuf_dump()
seqbuf_dump = _solfege_c_midi.seqbuf_dump

def sndctl_seq_nrsynths():
  return _solfege_c_midi.sndctl_seq_nrsynths()
sndctl_seq_nrsynths = _solfege_c_midi.sndctl_seq_nrsynths

def sndctl_seq_reset():
  return _solfege_c_midi.sndctl_seq_reset()
sndctl_seq_reset = _solfege_c_midi.sndctl_seq_reset

def sndctl_tmr_timebase(*args):
  return _solfege_c_midi.sndctl_tmr_timebase(*args)
sndctl_tmr_timebase = _solfege_c_midi.sndctl_tmr_timebase

def sndctl_tmr_tempo(*args):
  return _solfege_c_midi.sndctl_tmr_tempo(*args)
sndctl_tmr_tempo = _solfege_c_midi.sndctl_tmr_tempo

def sndctl_seq_gettime():
  return _solfege_c_midi.sndctl_seq_gettime()
sndctl_seq_gettime = _solfege_c_midi.sndctl_seq_gettime

def get_synth_name(*args):
  return _solfege_c_midi.get_synth_name(*args)
get_synth_name = _solfege_c_midi.get_synth_name

def get_synth_nr_voices(*args):
  return _solfege_c_midi.get_synth_nr_voices(*args)
get_synth_nr_voices = _solfege_c_midi.get_synth_nr_voices
# This file is compatible with both classic and new-style classes.

cvar = _solfege_c_midi.cvar

